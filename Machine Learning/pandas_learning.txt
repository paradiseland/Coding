import numpy
import pandas

一维：Series  一维带标签的同类数组
二维：DataFrame 二维标签、可变的不同类数组列

Series
DataFrame

df.head()
df.tail(n) 后n行
df.index
df.columns 列名

DataFrame.to_numpy()
pandas每列元素可能不同，ndarray所有元素类型相同

df.describe() 对数据集产生一个快速的统计信息
df.T
df.sort_index(axix=1,ascending=False) 
以索引名降序
df.sort_values(by='B')以某列元素升序排序

df['A'] 索引A列
df[0:3] 索引前四列
df['20130102':'20130104'] 索引2-4行
df.loc[dates[0]]
df.loc[:,['A','B']] 索引A、B列所有元素
df.loc['20130102':'20130104',['A','B']]

df.at[dates[0],'A'] 更快索引
df.iloc[3] 第四行
df.iloc[3:5,0:2] 4-5行_1-2列
df.iloc[[1,2,4],[0,2]]
df.iloc[1:3,:]
df.iloc[:,1:3]
df.iloc[1,1] prior -> df.iat[1,1]
df[df.A>0] 取A列>0的所有行？

isin()用来过滤

s1 = pd.Series([range(1:7)])通过索引重置值
df.at[dates[0],'A'] = 0
df.iat[0,1] = 0
df.loc[:,'D'] = np.array([5]*len(df))
df2 = df.copy()
df2[df > 0] = -df2

np.nan 表示消失的数据

df1.dropna(how='any') 舍弃所有有nan值的行
df1.fillna(value=5) 以5填充nan值
pd.isna(df1) 获得nan值的位置

df.mean() 返回各列(0维度)均值
df.mean(1) 返回各行(1维度)均值

df.apply(np.cumsum) 按0维度进行累计求和
df.apply(lambda x:x.max()-x.min()) 0维度求极差
s = pd.Series(np.random.randint(0,7),size=10)
s.value_counts() 进行同数计数

s.str.lower
pd.concat() 合并
df.append() 后面加行或列

Grouping ：Splitting,Applying,Combining

























